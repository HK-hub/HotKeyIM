<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hk.im.infrastructure.mapper.MessageFlowMapper">

    <resultMap id="BaseResultMap" type="com.hk.im.domain.entity.MessageFlow">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="groupId" column="group_id" jdbcType="BIGINT"/>
        <result property="senderId" column="sender_id" jdbcType="BIGINT"/>
        <result property="receiverId" column="receiver_id" jdbcType="BIGINT"/>
        <result property="chatType" column="chat_type" jdbcType="INTEGER"/>
        <result property="messageType" column="message_type" jdbcType="INTEGER"/>
        <result property="messageId" column="message_id" jdbcType="BIGINT"/>
        <result property="sequence" column="sequence" jdbcType="BIGINT"/>
        <result property="sendStatus" column="send_status" jdbcType="INTEGER"/>
        <result property="signFlag" column="sign_flag" jdbcType="INTEGER"/>
        <result property="revoke" column="revoke" jdbcType="BOOLEAN"/>
        <result property="deleted" column="deleted" jdbcType="TINYINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        ,group_id,sender_id,
        receiver_id,chat_type,message_type,
        message_id,sequence,send_status,sign_flag,revoke
        deleted,create_time,update_time
    </sql>

    <!-- 从锚点开始获取私聊聊天开始 -->
    <select id="selectPrivateRecordsByAnchor" resultType="com.hk.im.domain.entity.MessageFlow">
        select *
        from tb_message_flow
        where ((sender_id = #{po.senderId} and receiver_id = #{po.receiverId})
        or (sender_id = #{po.receiverId} and receiver_id = #{po.senderId}))
        <if test="po.sequence == 0">
            order by sequence desc limit #{po.limit};
        </if>
        <if test="po.sequence != 0">
            and `sequence` &lt; #{po.sequence}
            order by `sequence` limit #{po.limit};
        </if>

    </select>

    <!-- 从锚点开始查询群聊聊天消息分页 -->
    <select id="selectGroupRecordsByAnchor" resultType="com.hk.im.domain.entity.MessageFlow">
        select *
        from tb_message_flow
        where receiver_id = #{po.receiverId}
        <if test="po.sequence == 0">
            order by `sequence` desc limit #{po.limit};
        </if>
        <if test="po.sequence != 0">
            and `sequence` &lt; #{po.sequence}
            order by `sequence` limit #{po.limit};
        </if>
    </select>


    <!-- 查询私聊历史聊天记录 -->
    <select id="selectPrivateHistoryRecords" resultType="com.hk.im.domain.entity.MessageFlow">
        select * from tb_message_flow
        where ((sender_id = #{param.senderId} and receiver_id = #{param.receiverId})
        or (sender_id = #{param.receiverId} and receiver_id = #{param.senderId}))
        <if test="param.msgTypes != null and param.msgTypes.size() > 0">
          and message_type in
            <foreach collection="param.msgTypes" item="msgType" open="(" separator="," close=")">
                #{msgType}
            </foreach>
        </if>
        <if test="param.fromTime != null">
            and create_time >= #{param.fromTime}
        </if>
        <if test="param.toTime != null">
            and create_time &lt;= #{param.toTime}
        </if>
        <if test="param.sequence == 0">
            order by sequence desc limit #{param.limit};
        </if>
        <if test="param.sequence != 0">
            and `sequence` &lt; #{param.sequence}
            order by `sequence` limit #{param.limit};
        </if>
    </select>


    <!-- 查询群聊聊天历史记录 -->
    <select id="selectGroupHistoryRecords" resultType="com.hk.im.domain.entity.MessageFlow">
        select * from tb_message_flow
        where receiver_id = #{param.receiverId}
        <if test="param.senderId != null">
            and sender_id = #{param.senderId}
        </if>
        <if test="param.msgTypes != 0">
            and message_type = #{param.msgTypes}
        </if>
        <if test="param.fromTime != null">
            and create_time >= #{param.fromTime}
        </if>
        <if test="param.toTime != null">
            and create_time &lt;= #{param.toTime}
        </if>
        <if test="param.sequence == 0">
            order by sequence desc limit #{param.limit};
        </if>
        <if test="param.sequence != 0">
            and `sequence` &lt; #{param.sequence}
            order by `sequence` limit #{param.limit};
        </if>
    </select>

</mapper>
