<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hk.im.infrastructure.mapper.FriendMapper">

    <resultMap id="BaseResultMap" type="com.hk.im.domain.entity.Friend">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="userId" column="user_id" jdbcType="BIGINT"/>
            <result property="friendId" column="friend_id" jdbcType="BIGINT"/>
            <result property="relation" column="relation" jdbcType="INTEGER"/>
            <result property="group" column="`group`" jdbcType="VARCHAR"/>
            <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
            <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
            <result property="remarkName" column="remark_name" jdbcType="VARCHAR"/>
            <result property="remarkInfo" column="remark_info" jdbcType="VARCHAR"/>
            <result property="robot" column="robot" jdbcType="BOOLEAN"/>
            <result property="disturb" column="disturb" jdbcType="BOOLEAN"/>
            <result property="top" column="top" jdbcType="BOOLEAN"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,user_id,friend_id,
        relation,`group`,avatar,nickname,remark_name,
        remark_info,robot,disturb,top,create_time,update_time
    </sql>

    <!-- 删除好友：双向 -->
    <delete id="deleteByUserIdAndFriendId">
        delete from tb_friend
        where
            (user_id = #{userId} and friend_id = #{friendId})
            or
            (user_id = #{friendId} and friend_id = #{userId})
    </delete>

    <!-- 判断两个用户是否好友 -->
    <select id="selectFriendByTowUser" resultType="com.hk.im.domain.entity.Friend">
        select <include refid="Base_Column_List"/>
        from tb_friend
        where
            (user_id = #{fromUserId} and friend_id = #{toUserId})
            and (relation = 1 or relation = 3);
    </select>

    <!-- 判断两个用户是否具有某种关系 -->
    <select id="selectTheRelationship" resultType="com.hk.im.domain.entity.Friend">
        select <include refid="Base_Column_List"/>
        from tb_friend
        where
            (user_id = #{fromUserId} and friend_id = #{toUserId})
          and relation = #{relation}
    </select>


</mapper>
